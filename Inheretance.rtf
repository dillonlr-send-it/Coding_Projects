{\rtf1\ansi\ansicpg1252\cocoartf2820
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red103\green107\blue114;\red255\green255\blue255;\red195\green123\blue90;
\red174\green176\blue183;\red175\green177\blue183;\red195\green123\blue89;\red162\green5\blue165;\red129\green64\blue122;
\red128\green63\blue122;\red72\green150\blue243;\red117\green115\blue185;\red89\green158\blue96;\red161\green2\blue164;
\red38\green158\blue169;}
{\*\expandedcolortbl;;\cssrgb\c47988\c49637\c52205;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c81247\c55785\c42521;
\cssrgb\c73788\c74552\c76774;\cssrgb\c73977\c74746\c76784;\cssrgb\c81192\c55668\c42200;\cssrgb\c70369\c17064\c70580;\cssrgb\c58134\c33540\c55291;
\cssrgb\c57986\c33396\c55238;\cssrgb\c34103\c66223\c96308;\cssrgb\c53559\c53470\c77622;\cssrgb\c41349\c67108\c45002;\cssrgb\c69919\c16614\c70171;
\cssrgb\c16481\c67596\c72206;}
\margl1440\margr1440\vieww18220\viewh16180\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 # this code takes in a persons first name, last name, id number and score. It will the info provided into "Name:", "ID:", and "Grade:"\
# Create class that pulls in person information\
\cf4 class \cf5 Person:\cf6 \
	\cf7 def \cf8 __init__\cf6 (\cf9 self\cf6 , firstName, lastName, idNumber)\cf5 :\
		\cf10 self\cf5 .firstName = firstName\
		\cf10 self\cf5 .lastName = lastName\
		\cf10 self\cf5 .idNumber = idNumber\
    \cf2 # Print relevant info that defines each person\
	\cf4 def \cf11 printPerson\cf5 (\cf10 self\cf5 ):\
		\cf12 print\cf5 (\cf13 "Name:"\cf5 , \cf10 self\cf5 .lastName + \cf13 ","\cf5 , \cf10 self\cf5 .firstName)\
		\cf12 print\cf5 (\cf13 "ID:"\cf5 , \cf10 self\cf5 .idNumber)\
\
\cf2 # Create class that converts person into human\
\cf4 class \cf5 Student(Person):\
    \cf2 # Use inheretance to identify person as student\
    \cf4 def \cf14 __init__\cf5 (\cf10 self\cf5 , firstName, lastName, idNumber, scores):\
        \cf12 super\cf5 ().\cf14 __init__\cf5 (firstName, lastName, idNumber,)\
        \cf10 self\cf5 .scores = scores\
\
    \cf2 # perform some math on the students scores and give them a grade based on score\
    \cf4 def \cf11 calculate\cf5 (\cf10 self\cf5 ):\
        average = \cf12 sum\cf5 (\cf10 self\cf5 .scores) / \cf12 len\cf5 (\cf10 self\cf5 .scores)\
        \cf4 if \cf5 average >= \cf15 90\cf5 :\
            grade = \cf13 "O"\
        \cf4 elif \cf15 80 \cf5 <= average < \cf15 90\cf5 :\
            grade = \cf13 "E"\
        \cf4 elif \cf15 70 \cf5 <= average < \cf15 80\cf5 :\
            grade = \cf13 "A"\
        \cf4 elif \cf15 55 \cf5 <= average < \cf15 70\cf5 :\
            grade =  \cf13 "P"\
        \cf4 elif \cf15 40 \cf5 <= average < \cf15 55\cf5 :\
            grade = \cf13 "D"\
        \cf4 elif \cf5 average < \cf15 40\cf5 :\
            grade = \cf13 "T"\
        \cf4 return \cf5 grade\
\
\
line = \cf12 input\cf5 ().split()\
firstName = line[\cf15 0\cf5 ]\
lastName = line[\cf15 1\cf5 ]\
idNum = line[\cf15 2\cf5 ]\
numScores = \cf12 int\cf5 (\cf12 input\cf5 ()) \cf2 # not needed for Python\
\cf5 scores = \cf12 list\cf5 ( \cf12 map\cf5 (\cf12 int\cf5 , \cf12 input\cf5 ().split()) )\
s = Student(firstName, lastName, idNum, scores)\
s.printPerson()\
\cf12 print\cf5 (\cf13 "Grade:"\cf5 , s.calculate())\
}